{"ast":null,"code":"var _jsxFileName = \"/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/components/Authenticate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { verifyProofOnChain } from \"../utils/generateProof\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Authenticate = () => {\n  _s();\n  const [employeeId, setEmployeeId] = useState(\"\");\n  const [proof, setProof] = useState(\"\");\n  const handleAuthentication = async () => {\n    if (!employeeId || !proof) {\n      alert(\"Please enter all fields!\");\n      return;\n    }\n    const storedDID = localStorage.getItem(employeeId);\n    if (!storedDID) {\n      alert(\"User not registered!\");\n      return;\n    }\n    const proofData = JSON.parse(proof);\n    const result = await verifyProofOnChain(proofData);\n    alert(result ? \"✅ Authentication successful!\" : \"❌ Authentication failed!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Authenticate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Employee ID\",\n      onChange: e => setEmployeeId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Paste Proof JSON\",\n      onChange: e => setProof(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAuthentication,\n      children: \"Authenticate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Authenticate, \"NpIsHM5E8AvtDotfTFo+N0WQ0Vo=\");\n_c = Authenticate;\nexport default Authenticate;\nvar _c;\n$RefreshReg$(_c, \"Authenticate\");","map":{"version":3,"names":["React","useState","verifyProofOnChain","jsxDEV","_jsxDEV","Authenticate","_s","employeeId","setEmployeeId","proof","setProof","handleAuthentication","alert","storedDID","localStorage","getItem","proofData","JSON","parse","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/components/Authenticate.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { verifyProofOnChain } from \"../utils/generateProof\";\r\n\r\nconst Authenticate = () => {\r\n    const [employeeId, setEmployeeId] = useState(\"\");\r\n    const [proof, setProof] = useState(\"\");\r\n\r\n    const handleAuthentication = async () => {\r\n        if (!employeeId || !proof) {\r\n            alert(\"Please enter all fields!\");\r\n            return;\r\n        }\r\n\r\n        const storedDID = localStorage.getItem(employeeId);\r\n        if (!storedDID) {\r\n            alert(\"User not registered!\");\r\n            return;\r\n        }\r\n\r\n        const proofData = JSON.parse(proof);\r\n        const result = await verifyProofOnChain(proofData);\r\n        alert(result ? \"✅ Authentication successful!\" : \"❌ Authentication failed!\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Authenticate</h2>\r\n            <input type=\"text\" placeholder=\"Enter Employee ID\" onChange={(e) => setEmployeeId(e.target.value)} />\r\n            <textarea placeholder=\"Paste Proof JSON\" onChange={(e) => setProof(e.target.value)} />\r\n            <button onClick={handleAuthentication}>Authenticate</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Authenticate;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,kBAAkB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACJ,UAAU,IAAI,CAACE,KAAK,EAAE;MACvBG,KAAK,CAAC,0BAA0B,CAAC;MACjC;IACJ;IAEA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAACR,UAAU,CAAC;IAClD,IAAI,CAACM,SAAS,EAAE;MACZD,KAAK,CAAC,sBAAsB,CAAC;MAC7B;IACJ;IAEA,MAAMI,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACT,KAAK,CAAC;IACnC,MAAMU,MAAM,GAAG,MAAMjB,kBAAkB,CAACc,SAAS,CAAC;IAClDJ,KAAK,CAACO,MAAM,GAAG,8BAA8B,GAAG,0BAA0B,CAAC;EAC/E,CAAC;EAED,oBACIf,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBjB,OAAA;MAAAiB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,mBAAmB;MAACC,QAAQ,EAAGC,CAAC,IAAKrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrGrB,OAAA;MAAUuB,WAAW,EAAC,kBAAkB;MAACC,QAAQ,EAAGC,CAAC,IAAKnB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtFrB,OAAA;MAAQ4B,OAAO,EAAErB,oBAAqB;MAAAU,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd,CAAC;AAACnB,EAAA,CA7BID,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}