{"ast":null,"code":"var _jsxFileName = \"/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/components/UploadProof.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadProof = ({\n  onProofUploaded\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!file) {\n      alert(\"Please select a file first!\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const proofData = JSON.parse(e.target.result);\n        onProofUploaded(proofData);\n      } catch (error) {\n        alert(\"Invalid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload `proof.json`\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".json\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload & Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadProof, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = UploadProof;\nexport default UploadProof;\nvar _c;\n$RefreshReg$(_c, \"UploadProof\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadProof","onProofUploaded","_s","file","setFile","handleFileChange","event","target","files","handleUpload","alert","reader","FileReader","onload","e","proofData","JSON","parse","result","error","readAsText","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/components/UploadProof.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst UploadProof = ({ onProofUploaded }) => {\r\n    const [file, setFile] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        if (!file) {\r\n            alert(\"Please select a file first!\");\r\n            return;\r\n        }\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            try {\r\n                const proofData = JSON.parse(e.target.result);\r\n                onProofUploaded(proofData);\r\n            } catch (error) {\r\n                alert(\"Invalid JSON file.\");\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Upload `proof.json`</h2>\r\n            <input type=\"file\" accept=\".json\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload}>Upload & Verify</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadProof;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IAChCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACN,IAAI,EAAE;MACPO,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACJ;IAEA,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACnB,IAAI;QACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,CAACP,MAAM,CAACW,MAAM,CAAC;QAC7CjB,eAAe,CAACc,SAAS,CAAC;MAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZT,KAAK,CAAC,oBAAoB,CAAC;MAC/B;IACJ,CAAC;IACDC,MAAM,CAACS,UAAU,CAACjB,IAAI,CAAC;EAC3B,CAAC;EAED,oBACIJ,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,OAAO;MAACC,QAAQ,EAAEvB;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChE1B,OAAA;MAAQ8B,OAAO,EAAEpB,YAAa;MAAAY,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd,CAAC;AAACvB,EAAA,CAhCIF,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}