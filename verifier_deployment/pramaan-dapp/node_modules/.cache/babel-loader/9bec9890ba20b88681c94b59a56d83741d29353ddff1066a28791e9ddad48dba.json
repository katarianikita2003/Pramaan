{"ast":null,"code":"var _jsxFileName = \"/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Register from \"./components/Register\";\nimport Authenticate from \"./components/Authenticate\";\nimport VerifyProof from \"./components/VerifyProof\";\nimport ProofHistory from \"./components/ProofHistory\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./components/Login\";\nimport \"./styles/App.css\";\nimport \"./styles/Admin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADMIN_EMAIL = \"12214064@nitkkr.ac.in\"; // Admin email\n\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n    if (storedUser) {\n      setUser(storedUser);\n      setIsAdmin(storedUser.email === ADMIN_EMAIL);\n    }\n  }, []);\n  const handleLogin = userData => {\n    localStorage.setItem(\"user\", JSON.stringify(userData));\n    setUser(userData);\n    setIsAdmin(userData.email === ADMIN_EMAIL);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    setIsAdmin(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      user: user,\n      isAdmin: isAdmin,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/authenticate\",\n        element: /*#__PURE__*/_jsxDEV(Authenticate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/verify-proof\",\n        element: /*#__PURE__*/_jsxDEV(VerifyProof, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/proof-history\",\n        element: /*#__PURE__*/_jsxDEV(ProofHistory, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin-dashboard\",\n        element: isAdmin ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 67\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 88\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"2UqXbOeeuUvDOsbFP3CvMEGzHJQ=\");\n_c = App;\nexport default App;\n\n// /*\n//  * App.js - Main Routing & Authentication Handling\n//  */\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n// import Home from \"./components/Home\";\n// import Register from \"./components/Register\";\n// import Authenticate from \"./components/Authenticate\";\n// import ProofHistory from \"./components/ProofHistory\";\n// import AdminDashboard from \"./components/AdminDashboard\";\n// import Signup from \"./components/Signup\";\n// import UserManagement from \"./components/UserManagement\";\n// import VerifyRequests from \"./components/VerifyProof\";\n// import \"./styles/App.css\";\n// import \"./styles/Admin.css\";\n\n// const App = () => {\n//     const [userEmail, setUserEmail] = useState(null);\n\n//     return (\n//         <Router>\n//             <AppContent userEmail={userEmail} setUserEmail={setUserEmail} />\n//         </Router>\n//     );\n// };\n\n// const AppContent = ({ userEmail, setUserEmail }) => {\n//     const handleLogin = () => {\n//         const enteredEmail = prompt(\"Enter your Email:\");\n//         if (enteredEmail) {\n//             setUserEmail(enteredEmail);\n//             alert(\"Login successful!\");\n//         }\n//     };\n\n//     const handleLogout = () => {\n//         setUserEmail(null);\n//         alert(\"Logged out successfully.\");\n//     };\n\n//     return (\n//         <>\n//             <nav className=\"navbar\">\n//                 <h2>Pramaan</h2>\n//                 <div className=\"nav-links\">\n//                     <Link to=\"/\">Home</Link>\n//                     <Link to=\"/register\">Register</Link>\n//                     <Link to=\"/authenticate\">Authentication</Link>\n//                     <Link to=\"/proof-history\">Proof History</Link>\n//                 </div>\n//                 <div className=\"auth-buttons\">\n//                     {userEmail ? (\n//                         <>\n//                             <span>Logged in as {userEmail === \"12214064@nitkkr.ac.in\" ? \"Admin\" : userEmail}</span>\n//                             <button onClick={handleLogout}>Sign Out</button>\n//                         </>\n//                     ) : (\n//                         <button onClick={handleLogin}>Sign In</button>\n//                     )}\n//                 </div>\n//             </nav>\n\n//             <Routes>\n//                 <Route path=\"/\" element={<Home />} />\n//                 <Route path=\"/register\" element={<Register />} />\n//                 <Route path=\"/authenticate\" element={<Authenticate />} />\n//                 <Route path=\"/proof-history\" element={<ProofHistory />} />\n//                 <Route path=\"/admin-dashboard\" element={<AdminDashboard />} />\n//                 <Route path=\"/signup\" element={<Signup />} />\n//                 <Route path=\"/user-management\" element={<UserManagement />} />\n//                 <Route path=\"/verify-requests\" element={<VerifyRequests />} />\n//             </Routes>\n//         </>\n//     );\n// };\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Home","Register","Authenticate","VerifyProof","ProofHistory","AdminDashboard","Navbar","Login","jsxDEV","_jsxDEV","ADMIN_EMAIL","App","_s","user","setUser","isAdmin","setIsAdmin","storedUser","JSON","parse","localStorage","getItem","email","handleLogin","userData","setItem","stringify","handleLogout","removeItem","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","to","_c","$RefreshReg$"],"sources":["/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Register from \"./components/Register\";\nimport Authenticate from \"./components/Authenticate\";\nimport VerifyProof from \"./components/VerifyProof\";\nimport ProofHistory from \"./components/ProofHistory\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./components/Login\";\nimport \"./styles/App.css\";\nimport \"./styles/Admin.css\";\n\nconst ADMIN_EMAIL = \"12214064@nitkkr.ac.in\"; // Admin email\n\nconst App = () => {\n    const [user, setUser] = useState(null);\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    useEffect(() => {\n        const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n        if (storedUser) {\n            setUser(storedUser);\n            setIsAdmin(storedUser.email === ADMIN_EMAIL);\n        }\n    }, []);\n\n    const handleLogin = (userData) => {\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        setUser(userData);\n        setIsAdmin(userData.email === ADMIN_EMAIL);\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem(\"user\");\n        setUser(null);\n        setIsAdmin(false);\n    };\n\n    return (\n        <Router>\n            <Navbar user={user} isAdmin={isAdmin} onLogout={handleLogout} />\n            <Routes>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"/register\" element={<Register />} />\n                <Route path=\"/authenticate\" element={<Authenticate />} />\n                <Route path=\"/verify-proof\" element={<VerifyProof />} />\n                <Route path=\"/proof-history\" element={<ProofHistory />} />\n                <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n                <Route path=\"/admin-dashboard\" element={isAdmin ? <AdminDashboard /> : <Navigate to=\"/\" />} />\n            </Routes>\n        </Router>\n    );\n};\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// /*\n//  * App.js - Main Routing & Authentication Handling\n//  */\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n// import Home from \"./components/Home\";\n// import Register from \"./components/Register\";\n// import Authenticate from \"./components/Authenticate\";\n// import ProofHistory from \"./components/ProofHistory\";\n// import AdminDashboard from \"./components/AdminDashboard\";\n// import Signup from \"./components/Signup\";\n// import UserManagement from \"./components/UserManagement\";\n// import VerifyRequests from \"./components/VerifyProof\";\n// import \"./styles/App.css\";\n// import \"./styles/Admin.css\";\n\n// const App = () => {\n//     const [userEmail, setUserEmail] = useState(null);\n\n//     return (\n//         <Router>\n//             <AppContent userEmail={userEmail} setUserEmail={setUserEmail} />\n//         </Router>\n//     );\n// };\n\n// const AppContent = ({ userEmail, setUserEmail }) => {\n//     const handleLogin = () => {\n//         const enteredEmail = prompt(\"Enter your Email:\");\n//         if (enteredEmail) {\n//             setUserEmail(enteredEmail);\n//             alert(\"Login successful!\");\n//         }\n//     };\n\n//     const handleLogout = () => {\n//         setUserEmail(null);\n//         alert(\"Logged out successfully.\");\n//     };\n\n//     return (\n//         <>\n//             <nav className=\"navbar\">\n//                 <h2>Pramaan</h2>\n//                 <div className=\"nav-links\">\n//                     <Link to=\"/\">Home</Link>\n//                     <Link to=\"/register\">Register</Link>\n//                     <Link to=\"/authenticate\">Authentication</Link>\n//                     <Link to=\"/proof-history\">Proof History</Link>\n//                 </div>\n//                 <div className=\"auth-buttons\">\n//                     {userEmail ? (\n//                         <>\n//                             <span>Logged in as {userEmail === \"12214064@nitkkr.ac.in\" ? \"Admin\" : userEmail}</span>\n//                             <button onClick={handleLogout}>Sign Out</button>\n//                         </>\n//                     ) : (\n//                         <button onClick={handleLogin}>Sign In</button>\n//                     )}\n//                 </div>\n//             </nav>\n\n//             <Routes>\n//                 <Route path=\"/\" element={<Home />} />\n//                 <Route path=\"/register\" element={<Register />} />\n//                 <Route path=\"/authenticate\" element={<Authenticate />} />\n//                 <Route path=\"/proof-history\" element={<ProofHistory />} />\n//                 <Route path=\"/admin-dashboard\" element={<AdminDashboard />} />\n//                 <Route path=\"/signup\" element={<Signup />} />\n//                 <Route path=\"/user-management\" element={<UserManagement />} />\n//                 <Route path=\"/verify-requests\" element={<VerifyRequests />} />\n//             </Routes>\n//         </>\n//     );\n// };\n\n// export default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}