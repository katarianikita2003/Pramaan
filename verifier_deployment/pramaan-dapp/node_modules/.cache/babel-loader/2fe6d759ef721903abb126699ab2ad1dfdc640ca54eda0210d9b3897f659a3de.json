{"ast":null,"code":"var _jsxFileName = \"D:\\\\pramaan\\\\verifier_deployment\\\\pramaan-dapp\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    setError(\"\");\n  };\n  const validateForm = () => {\n    const {\n      email,\n      password\n    } = formData;\n    if (!email || !password) {\n      setError(\"Email and password are required.\");\n      return false;\n    }\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailRegex.test(email)) {\n      setError(\"Enter a valid email address.\");\n      return false;\n    }\n    return true;\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.error || \"Login failed\");\n        return;\n      }\n      localStorage.setItem(\"userEmail\", formData.email);\n      onLogin(formData.email);\n      setSuccessMessage(\"Login successful! Redirecting...\");\n      setTimeout(() => navigate(\"/\"), 2000);\n    } catch (err) {\n      setError(\"Network error. Please check your connection and try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container glass-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login to Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 34\n        }, this) : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/signup\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"7klzZwSxRYKObzA9Nvc/86hFoVc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/App.css\";\n\n// const Login = ({ onLogin }) => {\n//     const [formData, setFormData] = useState({ email: \"\", password: \"\" });\n//     const [error, setError] = useState(\"\");\n//     const [successMessage, setSuccessMessage] = useState(\"\");\n//     const navigate = useNavigate();\n\n//     const handleChange = (e) => {\n//         setFormData({ ...formData, [e.target.name]: e.target.value });\n//         setError(\"\"); // Clear error when user types\n//     };\n\n//     const validateForm = () => {\n//         const { email, password } = formData;\n//         if (!email || !password) {\n//             setError(\"‚ö†Ô∏è Email and password are required.\");\n//             return false;\n//         }\n//         const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n//         if (!emailRegex.test(email)) {\n//             setError(\"‚ö†Ô∏è Enter a valid email address.\");\n//             return false;\n//         }\n//         return true;\n//     };\n\n//     const handleLogin = async () => {\n//         console.log(\"üì• Login Attempt:\", formData); \n\n//         if (!validateForm()) return;\n\n//         try {\n//             const response = await fetch(\"http://localhost:5000/api/login\", {\n//                 method: \"POST\",\n//                 headers: { \"Content-Type\": \"application/json\" },\n//                 body: JSON.stringify(formData),\n//             });\n\n//             const data = await response.json();\n//             console.log(\"üì§ Login Response:\", data);\n//             if (!response.ok) {\n//                 setError(`‚ö†Ô∏è ${data.error}`);\n//                 return;\n//             }\n\n//             onLogin(formData.email);\n//             setSuccessMessage(\"‚úÖ Login successful! Redirecting...\");\n//             setTimeout(() => navigate(\"/\"), 2000);\n//         } catch (err) {\n//             setError(\"‚ö†Ô∏è Login failed. Try again.\");\n//         }\n//     };\n\n//     return (\n//         <div className=\"auth-container\">\n//             <h2>üîë Login to Your Account</h2>\n//             {error && <p className=\"error\">{error}</p>}\n//             {successMessage && <p className=\"success\">{successMessage}</p>}\n//             <input type=\"email\" name=\"email\" placeholder=\"‚úâÔ∏è Email\" onChange={handleChange} required />\n//             <input type=\"password\" name=\"password\" placeholder=\"üîí Password\" onChange={handleChange} required />\n//             <button onClick={handleLogin}>Login</button>\n//             <p>Don't have an account? <a href=\"/signup\">Sign Up</a></p>\n//         </div>\n//     );\n// };\n\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","onLogin","_s","formData","setFormData","email","password","error","setError","successMessage","setSuccessMessage","isLoading","setIsLoading","navigate","handleChange","e","target","name","value","validateForm","emailRegex","test","handleLogin","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","setTimeout","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","href","_c","$RefreshReg$"],"sources":["D:/pramaan/verifier_deployment/pramaan-dapp/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/App.css\";\r\n\r\nconst Login = ({ onLogin }) => {\r\n    const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n    const [error, setError] = useState(\"\");\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n        setError(\"\");\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const { email, password } = formData;\r\n        if (!email || !password) {\r\n            setError(\"Email and password are required.\");\r\n            return false;\r\n        }\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        if (!emailRegex.test(email)) {\r\n            setError(\"Enter a valid email address.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!validateForm()) return;\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/login\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            if (!response.ok) {\r\n                setError(data.error || \"Login failed\");\r\n                return;\r\n            }\r\n\r\n            localStorage.setItem(\"userEmail\", formData.email);\r\n            onLogin(formData.email);\r\n            setSuccessMessage(\"Login successful! Redirecting...\");\r\n            setTimeout(() => navigate(\"/\"), 2000);\r\n        } catch (err) {\r\n            setError(\"Network error. Please check your connection and try again.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-container glass-card\">\r\n            <h2>Login to Your Account</h2>\r\n            {error && <div className=\"error\">{error}</div>}\r\n            {successMessage && <div className=\"success\">{successMessage}</div>}\r\n            <form onSubmit={handleLogin}>\r\n                <input \r\n                    type=\"email\" \r\n                    name=\"email\" \r\n                    placeholder=\"Email\" \r\n                    value={formData.email}\r\n                    onChange={handleChange} \r\n                    required \r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    placeholder=\"Password\" \r\n                    value={formData.password}\r\n                    onChange={handleChange} \r\n                    required \r\n                />\r\n                <button type=\"submit\" disabled={isLoading}>\r\n                    {isLoading ? <span className=\"loading\"></span> : \"Login\"}\r\n                </button>\r\n            </form>\r\n            <p>\r\n                Don't have an account? <a href=\"/signup\">Sign Up</a>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"../styles/App.css\";\r\n\r\n// const Login = ({ onLogin }) => {\r\n//     const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n//     const [error, setError] = useState(\"\");\r\n//     const [successMessage, setSuccessMessage] = useState(\"\");\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//         setError(\"\"); // Clear error when user types\r\n//     };\r\n\r\n//     const validateForm = () => {\r\n//         const { email, password } = formData;\r\n//         if (!email || !password) {\r\n//             setError(\"‚ö†Ô∏è Email and password are required.\");\r\n//             return false;\r\n//         }\r\n//         const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n//         if (!emailRegex.test(email)) {\r\n//             setError(\"‚ö†Ô∏è Enter a valid email address.\");\r\n//             return false;\r\n//         }\r\n//         return true;\r\n//     };\r\n\r\n//     const handleLogin = async () => {\r\n//         console.log(\"üì• Login Attempt:\", formData); \r\n\r\n//         if (!validateForm()) return;\r\n\r\n//         try {\r\n//             const response = await fetch(\"http://localhost:5000/api/login\", {\r\n//                 method: \"POST\",\r\n//                 headers: { \"Content-Type\": \"application/json\" },\r\n//                 body: JSON.stringify(formData),\r\n//             });\r\n\r\n//             const data = await response.json();\r\n//             console.log(\"üì§ Login Response:\", data);\r\n//             if (!response.ok) {\r\n//                 setError(`‚ö†Ô∏è ${data.error}`);\r\n//                 return;\r\n//             }\r\n\r\n//             onLogin(formData.email);\r\n//             setSuccessMessage(\"‚úÖ Login successful! Redirecting...\");\r\n//             setTimeout(() => navigate(\"/\"), 2000);\r\n//         } catch (err) {\r\n//             setError(\"‚ö†Ô∏è Login failed. Try again.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"auth-container\">\r\n//             <h2>üîë Login to Your Account</h2>\r\n//             {error && <p className=\"error\">{error}</p>}\r\n//             {successMessage && <p className=\"success\">{successMessage}</p>}\r\n//             <input type=\"email\" name=\"email\" placeholder=\"‚úâÔ∏è Email\" onChange={handleChange} required />\r\n//             <input type=\"password\" name=\"password\" placeholder=\"üîí Password\" onChange={handleChange} required />\r\n//             <button onClick={handleLogin}>Login</button>\r\n//             <p>Don't have an account? <a href=\"/signup\">Sign Up</a></p>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}