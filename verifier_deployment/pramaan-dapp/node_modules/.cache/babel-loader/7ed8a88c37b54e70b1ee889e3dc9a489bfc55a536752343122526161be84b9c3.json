{"ast":null,"code":"var _jsxFileName = \"/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/components/VerifyProof.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyProof = () => {\n  _s();\n  const [proof, setProof] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const jsonProof = JSON.parse(e.target.result);\n        setProof(jsonProof);\n      } catch (error) {\n        alert(\"Invalid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  const handleVerify = async () => {\n    if (!proof) {\n      alert(\"Please upload a proof.json file.\");\n      return;\n    }\n\n    // Extract userId from proof inputs\n    const userId = proof.inputs ? proof.inputs[0] : null;\n    if (!userId) {\n      alert(\"Invalid proof file. Missing user ID.\");\n      return;\n    }\n    try {\n      console.log(`üîç Sending verification request for User ID: ${userId}`);\n      const response = await fetch(\"http://localhost:5000/api/verify\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          proof,\n          userId\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Verification Failed\");\n      }\n      const data = await response.json();\n      setStatus(data.success ? \"‚úÖ Authentication Success!\" : \"‚ùå Authentication Failed!\");\n    } catch (error) {\n      console.error(\"Error during verification:\", error);\n      setStatus(`‚ùå Verification Failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify Proof\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".json\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"verify-btn\",\n      onClick: handleVerify,\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"verification-status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(VerifyProof, \"WRyG0X1dM4bJlzaBQaYns+MO7tM=\");\n_c = VerifyProof;\nexport default VerifyProof;\nvar _c;\n$RefreshReg$(_c, \"VerifyProof\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VerifyProof","_s","proof","setProof","status","setStatus","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","jsonProof","JSON","parse","result","error","alert","readAsText","handleVerify","userId","inputs","console","log","response","fetch","method","headers","body","stringify","ok","errorData","json","Error","data","success","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/components/VerifyProof.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst VerifyProof = () => {\r\n    const [proof, setProof] = useState(null);\r\n    const [status, setStatus] = useState(\"\");\r\n\r\n    const handleFileUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            try {\r\n                const jsonProof = JSON.parse(e.target.result);\r\n                setProof(jsonProof);\r\n            } catch (error) {\r\n                alert(\"Invalid JSON file.\");\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    const handleVerify = async () => {\r\n        if (!proof) {\r\n            alert(\"Please upload a proof.json file.\");\r\n            return;\r\n        }\r\n\r\n        // Extract userId from proof inputs\r\n        const userId = proof.inputs ? proof.inputs[0] : null;\r\n\r\n        if (!userId) {\r\n            alert(\"Invalid proof file. Missing user ID.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            console.log(`üîç Sending verification request for User ID: ${userId}`);\r\n            const response = await fetch(\"http://localhost:5000/api/verify\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ proof, userId })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.error || \"Verification Failed\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            setStatus(data.success ? \"‚úÖ Authentication Success!\" : \"‚ùå Authentication Failed!\");\r\n        } catch (error) {\r\n            console.error(\"Error during verification:\", error);\r\n            setStatus(`‚ùå Verification Failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Verify Proof</h2>\r\n            <input type=\"file\" accept=\".json\" onChange={handleFileUpload} />\r\n            <button className=\"verify-btn\" onClick={handleVerify}>Verify</button>\r\n            {status && <p className=\"verification-status\">{status}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VerifyProof;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACnB,IAAI;QACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,CAACL,MAAM,CAACS,MAAM,CAAC;QAC7Cf,QAAQ,CAACY,SAAS,CAAC;MACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZC,KAAK,CAAC,oBAAoB,CAAC;MAC/B;IACJ,CAAC;IACDT,MAAM,CAACU,UAAU,CAACb,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACpB,KAAK,EAAE;MACRkB,KAAK,CAAC,kCAAkC,CAAC;MACzC;IACJ;;IAEA;IACA,MAAMG,MAAM,GAAGrB,KAAK,CAACsB,MAAM,GAAGtB,KAAK,CAACsB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI;IAEpD,IAAI,CAACD,MAAM,EAAE;MACTH,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACJ;IAEA,IAAI;MACAK,OAAO,CAACC,GAAG,CAAC,gDAAgDH,MAAM,EAAE,CAAC;MACrE,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEf,IAAI,CAACgB,SAAS,CAAC;UAAE9B,KAAK;UAAEqB;QAAO,CAAC;MAC1C,CAAC,CAAC;MAEF,IAAI,CAACI,QAAQ,CAACM,EAAE,EAAE;QACd,MAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACf,KAAK,IAAI,qBAAqB,CAAC;MAC7D;MAEA,MAAMkB,IAAI,GAAG,MAAMV,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC9B,SAAS,CAACgC,IAAI,CAACC,OAAO,GAAG,2BAA2B,GAAG,0BAA0B,CAAC;IACtF,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACZM,OAAO,CAACN,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDd,SAAS,CAAC,0BAA0Bc,KAAK,CAACoB,OAAO,EAAE,CAAC;IACxD;EACJ,CAAC;EAED,oBACIxC,OAAA;IAAKyC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB1C,OAAA;MAAA0C,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB9C,OAAA;MAAO+C,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,OAAO;MAACC,QAAQ,EAAE1C;IAAiB;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChE9C,OAAA;MAAQyC,SAAS,EAAC,YAAY;MAACS,OAAO,EAAE3B,YAAa;MAAAmB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpEzC,MAAM,iBAAIL,OAAA;MAAGyC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAErC;IAAM;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEd,CAAC;AAAC5C,EAAA,CA7DID,WAAW;AAAAkD,EAAA,GAAXlD,WAAW;AA+DjB,eAAeA,WAAW;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}