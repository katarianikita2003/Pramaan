{"ast":null,"code":"import React,{useState}from\"react\";import{generateProof}from\"../utils/generateProof\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const[employeeId,setEmployeeId]=useState(\"\");const[biometricId,setBiometricId]=useState(\"\");const[proofData,setProofData]=useState(null);const handleRegister=async()=>{if(!employeeId&&!biometricId){alert(\"Enter either Employee ID or Biometric ID!\");return;}const userId=employeeId||biometricId;const hashedId=await sha256(userId);const did=`did:pramaan:${hashedId.slice(0,16)}`;if(localStorage.getItem(userId)){alert(\"Already registered!\");return;}// Generate Proof\nconst proof=await generateProof(hashedId);setProofData(proof);localStorage.setItem(userId,JSON.stringify({did,proof}));alert(\"✅ Successful Registration! Please download your proof.\");};const downloadProof=()=>{const element=document.createElement(\"a\");const file=new Blob([JSON.stringify(proofData,null,2)],{type:\"application/json\"});element.href=URL.createObjectURL(file);element.download=\"proof.json\";document.body.appendChild(element);element.click();};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Employee ID\",onChange:e=>setEmployeeId(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Biometric ID\",onChange:e=>setBiometricId(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRegister,children:\"Register\"}),proofData&&/*#__PURE__*/_jsx(\"button\",{onClick:downloadProof,children:\"Download Proof\"})]});};const sha256=async message=>{const msgBuffer=new TextEncoder().encode(message);const hashBuffer=await crypto.subtle.digest(\"SHA-256\",msgBuffer);return Array.from(new Uint8Array(hashBuffer)).map(b=>b.toString(16).padStart(2,\"0\")).join(\"\");};export default Register;","map":{"version":3,"names":["React","useState","generateProof","jsx","_jsx","jsxs","_jsxs","Register","employeeId","setEmployeeId","biometricId","setBiometricId","proofData","setProofData","handleRegister","alert","userId","hashedId","sha256","did","slice","localStorage","getItem","proof","setItem","JSON","stringify","downloadProof","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","className","children","placeholder","onChange","e","target","value","onClick","message","msgBuffer","TextEncoder","encode","hashBuffer","crypto","subtle","digest","Array","from","Uint8Array","map","b","toString","padStart","join"],"sources":["/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/components/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { generateProof } from \"../utils/generateProof\";\r\n\r\nconst Register = () => {\r\n    const [employeeId, setEmployeeId] = useState(\"\");\r\n    const [biometricId, setBiometricId] = useState(\"\");\r\n    const [proofData, setProofData] = useState(null);\r\n\r\n    const handleRegister = async () => {\r\n        if (!employeeId && !biometricId) {\r\n            alert(\"Enter either Employee ID or Biometric ID!\");\r\n            return;\r\n        }\r\n\r\n        const userId = employeeId || biometricId;\r\n        const hashedId = await sha256(userId);\r\n        const did = `did:pramaan:${hashedId.slice(0, 16)}`;\r\n\r\n        if (localStorage.getItem(userId)) {\r\n            alert(\"Already registered!\");\r\n            return;\r\n        }\r\n\r\n        // Generate Proof\r\n        const proof = await generateProof(hashedId);\r\n        setProofData(proof);\r\n\r\n        localStorage.setItem(userId, JSON.stringify({ did, proof }));\r\n        alert(\"✅ Successful Registration! Please download your proof.\");\r\n    };\r\n\r\n    const downloadProof = () => {\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([JSON.stringify(proofData, null, 2)], { type: \"application/json\" });\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = \"proof.json\";\r\n        document.body.appendChild(element);\r\n        element.click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Register</h2>\r\n            <input type=\"text\" placeholder=\"Enter Employee ID\" onChange={(e) => setEmployeeId(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"Enter Biometric ID\" onChange={(e) => setBiometricId(e.target.value)} />\r\n            <button onClick={handleRegister}>Register</button>\r\n            {proofData && <button onClick={downloadProof}>Download Proof</button>}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst sha256 = async (message) => {\r\n    const msgBuffer = new TextEncoder().encode(message);\r\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", msgBuffer);\r\n    return Array.from(new Uint8Array(hashBuffer)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}