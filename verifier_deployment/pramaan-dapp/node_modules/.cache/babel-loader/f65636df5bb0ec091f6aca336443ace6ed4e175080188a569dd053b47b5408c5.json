{"ast":null,"code":"var _jsxFileName = \"/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/components/ProofHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProofHistory = ({\n  email\n}) => {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchHistory = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/proof-history/${email}`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch proof history.\");\n        }\n        const data = await response.json();\n        setHistory(data);\n      } catch (error) {\n        setError(\"Error fetching proof history. Please try again.\");\n        console.error(\"❌ Error fetching proof history:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (email) fetchHistory();\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"proof-history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Proof History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading proof history...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this) : history.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-data\",\n      children: \"No proof history available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"history-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sr. No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date & Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Verification Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: history.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(entry.date).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: entry.status === \"Success\" ? \"success\" : \"failure\",\n            children: entry.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(ProofHistory, \"cHKmXLHM8FFO8uTjfOcVNJ/l8/c=\");\n_c = ProofHistory;\nexport default ProofHistory;\nvar _c;\n$RefreshReg$(_c, \"ProofHistory\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProofHistory","email","_s","history","setHistory","loading","setLoading","error","setError","fetchHistory","response","fetch","ok","Error","data","json","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","entry","index","Date","date","toLocaleString","status","_c","$RefreshReg$"],"sources":["/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/components/ProofHistory.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProofHistory = ({ email }) => {\r\n    const [history, setHistory] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/proof-history/${email}`);\r\n                if (!response.ok) {\r\n                    throw new Error(\"Failed to fetch proof history.\");\r\n                }\r\n\r\n                const data = await response.json();\r\n                setHistory(data);\r\n            } catch (error) {\r\n                setError(\"Error fetching proof history. Please try again.\");\r\n                console.error(\"❌ Error fetching proof history:\", error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (email) fetchHistory();\r\n    }, [email]);\r\n\r\n    return (\r\n        <div className=\"proof-history-container\">\r\n            <h2>Proof History</h2>\r\n\r\n            {loading ? (\r\n                <p>Loading proof history...</p>\r\n            ) : error ? (\r\n                <p className=\"error-message\">{error}</p>\r\n            ) : history.length === 0 ? (\r\n                <p className=\"no-data\">No proof history available.</p>\r\n            ) : (\r\n                <table className=\"history-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Sr. No.</th>\r\n                            <th>Date & Time</th>\r\n                            <th>Verification Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {history.map((entry, index) => (\r\n                            <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{new Date(entry.date).toLocaleString()}</td>\r\n                                <td className={entry.status === \"Success\" ? \"success\" : \"failure\"}>\r\n                                    {entry.status}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProofHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}