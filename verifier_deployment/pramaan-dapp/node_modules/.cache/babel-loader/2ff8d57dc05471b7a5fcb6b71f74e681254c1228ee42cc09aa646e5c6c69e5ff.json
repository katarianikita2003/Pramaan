{"ast":null,"code":"var _jsxFileName = \"/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/components/VerifyProof.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyProof = () => {\n  _s();\n  const [proof, setProof] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Handles proof.json file upload\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const jsonProof = JSON.parse(e.target.result);\n\n        // Validate if proof contains \"inputs\"\n        if (!jsonProof.inputs || !Array.isArray(jsonProof.inputs) || jsonProof.inputs.length === 0) {\n          throw new Error(\"Invalid proof file: Missing inputs\");\n        }\n        setProof(jsonProof);\n        setError(\"\");\n      } catch (error) {\n        setError(\"‚ùå Invalid JSON file: \" + error.message);\n        setProof(null);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Handles Proof Verification on the backend\n  const handleVerify = async () => {\n    const email = localStorage.getItem(\"userEmail\");\n    if (!email) {\n      setError(\"‚ùå User not logged in! Please login first.\");\n      return;\n    }\n    if (!proof) {\n      setError(\"‚ùå Please upload a valid proof.json file.\");\n      return;\n    }\n    try {\n      console.log(`üì§ Sending verification request for User: ${email}`);\n      const response = await fetch(\"http://localhost:5000/api/verify\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          proof,\n          email\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Verification Failed\");\n      }\n      const data = await response.json();\n      setStatus(data.success ? \"‚úÖ Authentication Success!\" : \"‚ùå Authentication Failed!\");\n      setError(\"\");\n    } catch (error) {\n      console.error(\"‚ùå Error during verification:\", error);\n      setStatus(\"\");\n      setError(`‚ùå Verification Failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verify-proof-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify Proof\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".json\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"verify-btn\",\n      onClick: handleVerify,\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"verification-status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(VerifyProof, \"tIfAwTO6asjMOeaDXqENGjIOTS4=\");\n_c = VerifyProof;\nexport default VerifyProof;\nvar _c;\n$RefreshReg$(_c, \"VerifyProof\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VerifyProof","_s","proof","setProof","status","setStatus","error","setError","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","jsonProof","JSON","parse","result","inputs","Array","isArray","length","Error","message","readAsText","handleVerify","email","localStorage","getItem","console","log","response","fetch","method","headers","body","stringify","ok","errorData","json","data","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["/mnt/d/pramaan/verifier_deployment/pramaan-dapp/src/components/VerifyProof.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst VerifyProof = () => {\r\n    const [proof, setProof] = useState(null);\r\n    const [status, setStatus] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // Handles proof.json file upload\r\n    const handleFileUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (e) => {\r\n            try {\r\n                const jsonProof = JSON.parse(e.target.result);\r\n\r\n                // Validate if proof contains \"inputs\"\r\n                if (!jsonProof.inputs || !Array.isArray(jsonProof.inputs) || jsonProof.inputs.length === 0) {\r\n                    throw new Error(\"Invalid proof file: Missing inputs\");\r\n                }\r\n\r\n                setProof(jsonProof);\r\n                setError(\"\");\r\n            } catch (error) {\r\n                setError(\"‚ùå Invalid JSON file: \" + error.message);\r\n                setProof(null);\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    // Handles Proof Verification on the backend\r\n    const handleVerify = async () => {\r\n        const email = localStorage.getItem(\"userEmail\");\r\n\r\n        if (!email) {\r\n            setError(\"‚ùå User not logged in! Please login first.\");\r\n            return;\r\n        }\r\n\r\n        if (!proof) {\r\n            setError(\"‚ùå Please upload a valid proof.json file.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            console.log(`üì§ Sending verification request for User: ${email}`);\r\n\r\n            const response = await fetch(\"http://localhost:5000/api/verify\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ proof, email }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.error || \"Verification Failed\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            setStatus(data.success ? \"‚úÖ Authentication Success!\" : \"‚ùå Authentication Failed!\");\r\n            setError(\"\");\r\n        } catch (error) {\r\n            console.error(\"‚ùå Error during verification:\", error);\r\n            setStatus(\"\");\r\n            setError(`‚ùå Verification Failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"verify-proof-container\">\r\n            <h2>Verify Proof</h2>\r\n            <input type=\"file\" accept=\".json\" onChange={handleFileUpload} />\r\n            <button className=\"verify-btn\" onClick={handleVerify}>Verify</button>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {status && <p className=\"verification-status\">{status}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VerifyProof;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}